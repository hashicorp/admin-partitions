Note: These scripts use environmental variables which only apply to a single terminal session. Therefore run the scripts and commands in these steps 
within the same terminal.


#################
#CONSUL SERVER
#################

1) Run Install_Consul_Server.sh to deploy Consul Server

  ./Install_Consul_Server.sh

2) Get External-IP (or DNS name) of the Consul server's "consul-consul-partition-service" 
  
  kubectl get services
  NAME                                 TYPE           CLUSTER-IP       EXTERNAL-IP                                                                PORT(S)                                                                   AGE
  consul-consul-connect-injector-svc   ClusterIP      172.20.114.128   <none>                                                                     443/TCP                                                                   18s
  consul-consul-controller-webhook     ClusterIP      172.20.43.214    <none>                                                                     443/TCP                                                                   18s
  consul-consul-dns                    ClusterIP      172.20.186.241   <none>                                                                     53/TCP,53/UDP                                                             18s
  consul-consul-mesh-gateway           LoadBalancer   172.20.212.5     a00a823716a7d4597b68b65072f970b6-1765211840.eu-north-1.elb.amazonaws.com   443:31218/TCP                                                             18s
  consul-consul-partition-service      LoadBalancer   172.20.138.45    a45c0d48015ed418fbebb1154604f20c-163347652.eu-north-1.elb.amazonaws.com    8501:31819/TCP,8301:31259/TCP,8300:32170/TCP                              18s
  consul-consul-server                 ClusterIP      None             <none>                                                                     8501/TCP,8301/TCP,8301/UDP,8302/TCP,8302/UDP,8300/TCP,8600/TCP,8600/UDP   18s
  consul-consul-ui                     LoadBalancer   172.20.86.24     a147f1516f6874a91851f398f7034527-38406048.eu-north-1.elb.amazonaws.com     443:31865/TCP                                                             18s
  kubernetes                           ClusterIP      172.20.0.1       <none>                                                                     443/TCP                                                                   50m

  Make a note of the External-IP of the "consul-consul-partition-service". We will use in the next couple of steps.


#################
#CONSUL CLIENT 1
#################

  
3) Get DNS name of EKS API Server of Client 1. Make a note of the output. We will use this to get the next step.
   
   kubectl config view -o jsonpath="{.clusters[?(@.name=='$EKS_CLUSTER_CLIENT1_CTX')].cluster.server}" | sed 's/https:\/\///'

4) Edit helm-client-team1.yaml file:
  
   a) Edit both the "hosts" and "join" fields to reflect the External-IP (or DNS name) of the consul-consul-partition-service on the Server EKS cluster. 
      You should have noted the External-IP was mentioned in the previous step 2.
      
   b) Edit the "k8sAuthMethodHost" field to reflect the EKS API server's IP/DNS name of the Client 1 EKS Cluster. 
      You retreived the EKS API server DNS name from step 3. 
      
  
  Example inputs for the helm-client-team1.yaml file:
  
  externalServers:
    enabled: true
    hosts: [ "a45c0d48015ed418fbebb1154604f20c-163347652.eu-north-1.elb.amazonaws.com" ]
    tlsServerName: server.dc1.consul
    k8sAuthMethodHost: "E9122C19C8B28D0DFBC6E0C7DDF16B4D.yl4.eu-north-1.eks.amazonaws.com"
  ...
  client:
    enabled: true
    exposeGossipPorts: true
    join: [ "a45c0d48015ed418fbebb1154604f20c-163347652.eu-north-1.elb.amazonaws.com" ]


5) Run Install_Consul_Client1.sh script to deploy Consul Client1

  ./Install_Consul_Client1.sh
  
  
  

#################
#CONSUL CLIENT 2
#################

6) Get DNS name of EKS API Server of Client 2. Make a note of the output. We will use this to get the next step.
   
   kubectl config view -o jsonpath="{.clusters[?(@.name=='$EKS_CLUSTER_CLIENT2_CTX')].cluster.server}" | sed 's/https:\/\///'

7) Edit helm-client-team2.yaml file:
  
   a) Edit both the "hosts" and "join" fields to reflect the External-IP (or DNS name) of the consul-consul-partition-service on the Server EKS cluster. 
      You should have noted the External-IP was mentioned in the previous step 2.
      
   b) Edit the "k8sAuthMethodHost" field to reflect the EKS API server's IP/DNS name of the Client 2 EKS Cluster. 
      You retreived the EKS API server DNS name from step 6. 
      
      
  
  Example inputs for the helm-client-team1.yaml file:
  
  externalServers:
    enabled: true
    hosts: [ "a45c0d48015ed418fbebb1154604f20c-163347652.eu-north-1.elb.amazonaws.com" ]
    tlsServerName: server.dc1.consul
    k8sAuthMethodHost: "587856589C8B28D0DFBC6E0C7DDF16B4D.yl4.eu-north-1.eks.amazonaws.com"
  ...
  client:
    enabled: true
    exposeGossipPorts: true
    join: [ "a45c0d48015ed418fbebb1154604f20c-163347652.eu-north-1.elb.amazonaws.com" ]


8) 5) Run Install_Consul_Client2.sh to deploy Consul Client2




